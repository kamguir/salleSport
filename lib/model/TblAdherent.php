<?php

/**
 * Skeleton subclass for representing a row from the 'tbl_adherent' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.6-dev on:
 *
 * 03/27/14 16:29:20
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class TblAdherent extends BaseTblAdherent {

    public function __toString() {
        return $this->getNomAdherent() . ' ' . $this->getPrenomAdherent();
    }

    public function toArrayString() {
        $libelleSport = ' -- ';
        $typeAdherent = ' -- ';
        $situationAdherent = ' -- ';
        $niveauAdherent = ' -- ';
        if ($this->getRefTypeSport()) {
            $libelleSport = $this->getRefTypeSport()->getLibelle();
        }
        if ($this->getRefSituation()) {
            $situationAdherent = $this->getRefSituation()->getSituation();
        }
        if ($this->getRefTypeAdherent()) {
            $typeAdherent = $this->getRefTypeAdherent()->getLibelleTypeAdherent();
        }
        if ($this->getRefNiveauAdherent()) {
            $niveauAdherent = $this->getRefNiveauAdherent()->getNiveauAdherentLibelle();
        }

        return array(
            $this->getRefCivilite()->getLibelleCivilite() . ' ' . ucfirst($this->getNomAdherent()) . ',' . ucfirst($this->getPrenomAdherent()),
//            $this->getCinAdherent(),
            $situationAdherent,
            $this->getAgeAdherent(),
            $this->getNumTel(),
//            $this->getAdresseAdherent(),
            $libelleSport,
            $typeAdherent,
            $niveauAdherent,
            $this->getDateAdhesion(),
            "DT_RowId" => "row_" . $this->getIdAdherent()
        );
    }

    public function AdherentstoArrayString() {
        $libelleSport = ' -- ';
        $situationAdherent = ' -- ';
        $niveauAdherent = ' -- ';
        $pathCeinture = '75px-Ceinture_blanche.png';
        if ($this->getRefTypeSport()) {
            $libelleSport = $this->getRefTypeSport()->getLibelle();
        }
        if ($this->getRefSituation()) {
            $situationAdherent = $this->getRefSituation()->getSituation();
        }
        if ($this->getRefNiveauAdherent()) {
            $niveauAdherent = $this->getRefNiveauAdherent()->getNiveauAdherentLibelle();
        }
        if ($objCeintures = $this->getTblCeintures()) {
            foreach ($objCeintures as $objCeinture) {
                $pathCeinture = $objCeinture->getRefCeintureCouleur()->getPathImage();
            }
        }
        return array(
            $this->getRefCivilite()->getLibelleCivilite() . ' ' . ucfirst($this->getNomAdherent()) . ',' . ucfirst($this->getPrenomAdherent()),
            $situationAdherent,
            $this->getAgeAdherent(),
            $this->getNumTel(),
            $libelleSport,
            $niveauAdherent,
            "<img src=/images/niveau_ceinture/" . $pathCeinture . ">",
            $this->getDateAdhesion(),
            "DT_RowId" => "row_" . $this->getIdAdherent()
        );
    }

    public function PlanningEntrainneurstoArrayString() {
        $joursPlanning = '';
        $horaire = '';
        $competance = ' -- ';
        $pathCeinture = '75px-Ceinture_blanche.png';
        if ($objJours = $this->getLnkJourEntrainementAdherents()) {
            foreach ($objJours as $objJour) {
                $joursPlanning .= $objJour->getRefJour()->getLibelleJour() . " </br> ";
            }
        }
        if ($this->getSeanceHoraireId()) {
            $horaire .= $this->getRefSeanceHoraire()->getSeanceHoraire() . " </br> ";
        }
        if ($tblCeintures = $this->getTblCeintures()) {
            foreach ($tblCeintures as $value) {
                $competance = $value->getRefCompetance()->getCompetanceLibelle();
            }
        }
        if ($objCeintures = $this->getTblCeintures()) {
            foreach ($objCeintures as $objCeinture) {
                $pathCeinture = $objCeinture->getRefCeintureCouleur()->getPathImage();
            }
        }
        return array(
            $this->getRefCivilite()->getLibelleCivilite() . ' ' . ucfirst($this->getNomAdherent()) . ',' . ucfirst($this->getPrenomAdherent()),
            $competance,
            $this->getRefTypeSport()->getLibelle(),
            "<img src=/images/niveau_ceinture/" . $pathCeinture . ">",
            $joursPlanning,
            $horaire,
            "DT_RowId" => "row_" . $this->getIdAdherent()
        );
    }

    public function MesAdherentstoArrayString() {
        $niveau = ' -- ';
        $joursPlanning = '';
        $pathCeinture = '75px-Ceinture_blanche.png';
        $libelleSport = ' -- ';
        $horaire = '';
        if ($this->getRefTypeSport()) {
            $libelleSport = $this->getRefTypeSport()->getLibelle();
        }
        if ($this->getRefNiveauAdherent()) {
            $niveau = $this->getRefNiveauAdherent()->getNiveauAdherentLibelle();
        }
        if ($objCeintures = $this->getTblCeintures()) {
            foreach ($objCeintures as $objCeinture) {
                $pathCeinture = $objCeinture->getRefCeintureCouleur()->getPathImage();
            }
        }
        if ($this->getSeanceHoraireId()) {
            $horaire .= $this->getRefSeanceHoraire()->getSeanceHoraire() . " </br> ";
        }

        if ($this->getEntraineurId()) {
            $mesJoursEntrainements = LnkJourEntrainementAdherentQuery::create()
                    ->filterByIdAdherent($this->getEntraineurId())
                    ->leftJoinRefJour()
                    ->withColumn(RefJourPeer::LIBELLE_JOUR, 'libelleJour')
                    ->find();


            foreach ($mesJoursEntrainements as $mesJoursEntrainement) {
                $joursPlanning .= $mesJoursEntrainement->getLibelleJour() . " </br> ";
            }
        }

        return array(
            $this->getRefCivilite()->getLibelleCivilite() . ' ' . ucfirst($this->getNomAdherent()) . ',' . ucfirst($this->getPrenomAdherent()),
            $libelleSport,
            $niveau,
            "<img src=/images/niveau_ceinture/" . $pathCeinture . ">",
            $joursPlanning,
            $horaire,
            "DT_RowId" => "row_" . $this->getIdAdherent()
        );
    }

    public function PlanningSportstoArrayString() {
        $joursPlanning = '';
        if ($objJours = $this->getLnkJourEntrainementAdherents()) {
            foreach ($objJours as $objJour) {
                $joursPlanning .= $objJour->getRefJour()->getLibelleJour() . " </br> ";
            }
        }

        return array(
            $this->getRefTypeSport()->getLibelle(),
            $joursPlanning,
            "DT_RowId" => "row_" . $this->getIdAdherent()
        );
    }
    
    public function getEntraineurById($idEntraineur) {
        $objEntraineur = TblAdherentQuery::create()
                ->filterByIdAdherent($idEntraineur)
                ->findOne();
        return $objEntraineur->getNomAdherent().' '.$objEntraineur->getPrenomAdherent();
    }

    protected function doInsert(PropelPDO $con) {
        $this->setUserId( sfContext::getInstance()->getUser()->getAttribute('user_id'));
        parent::doInsert($con);
    }
}

// TblAdherent
