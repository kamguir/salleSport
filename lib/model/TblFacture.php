<?php

/**
 * Skeleton subclass for representing a row from the 'tbl_facture' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.6.6-dev on:
 *
 * 03/27/14 16:29:21
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class TblFacture extends BaseTblFacture {

//    public function getEtatPaiement() {
//        if($this->etat_paiement == 1)
//            return 'Payé';
//        if($this->etat_paiement == 0)
//            return 'Non Payé';
//    }

    public function toArrayString() {
        $civilite = ' -- ';
        $nomAdherent = ' -- ';
        $preNomAdherent = ' -- ';
        $typeAdherent = ' -- ';
        $typeSport = ' -- ';
        $iconeEtat = 'ko.png';
        if ($this->getTblAdherent()) {
            $tblAdherent = $this->getTblAdherent();
            $civilite = $tblAdherent->getRefCivilite()->getLibelleCivilite();
            $nomAdherent = ucfirst($tblAdherent->getNomAdherent());
            $preNomAdherent = ucfirst($tblAdherent->getPrenomAdherent());
            $typeAdherent = $tblAdherent->getRefTypeAdherent()->getLibelleTypeAdherent();
            $typeSport = $tblAdherent->getRefTypeSport()->getLibelle();
            if ($this->getEtatPaiement()) {
                $iconeEtat = "ok.png";
            } else {
                $iconeEtat = "ko.png";
            }
        }

        return array(
            $civilite . ' ' . $nomAdherent . ' ' . $preNomAdherent,
            $typeAdherent,
            $typeSport,
            $this->getPrixFacture(),
            $this->getDateReglement(),
//            $this->getEtatPaiement(),
            "<img src=/images/" . $iconeEtat . " alt=\"Smiley face\"'>",
            "DT_RowId" => "row_" . $this->getIdFacture()
        );
    }

    public function toArrayStringAdherentNonPaye() {
        $civilite = ' -- ';
        $nomAdherent = ' -- ';
        $preNomAdherent = ' -- ';
        $numTelAdherent = ' -- ';
        $typeSportAdherent = ' -- ';
        if ($this->getTblAdherent()) {
            $tblAdherent = $this->getTblAdherent();
            $civilite = $tblAdherent->getRefCivilite()->getLibelleCivilite();
            $nomAdherent = $tblAdherent->getNomAdherent();
            $preNomAdherent = $tblAdherent->getPrenomAdherent();
            $numTelAdherent = $tblAdherent->getNumTel();
            $typeSportAdherent = $tblAdherent->getRefTypeSport()->getLibelle();
        }

        return array(
            $civilite . ' ' . $nomAdherent . ' ' . $preNomAdherent,
            $numTelAdherent,
            $typeSportAdherent,
            $this->getPrixFacture(),
            $this->getDateReglement(),
            "DT_RowId" => "row_" . $this->getIdAdherent()
        );
    }

    public function getFactureNonPayes() {

        $totalFacturesNonPayéParMois = TblFactureQuery::create()
                ->filterByDateReglement(array("min" => date('Y') . '-' . date('m') . '-01', "max" => date('Y') . '-' . date('m') . '-31'))
                ->filterByEtatPaiement(FALSE)
                ->find();

        return $totalFacturesNonPayéParMois;
    }

}

// TblFacture
